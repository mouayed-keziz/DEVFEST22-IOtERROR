/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import model from "../assets/gangOpened.gltf"
import { useSpring, animated, config } from '@react-spring/three'
import { useInterval } from "@mantine/hooks";


export default function Prototype2(props) {
    const { nodes, materials } = useGLTF(model);
    const [active, setActive] = React.useState(false);
    const myMesh = useRef();
    const { scale } = useSpring({ scale: active ? 1.3 : 1, config: config.wobbly, });

    useInterval(() => {
        setActive(!active);
        console.log(active);
    }, 1);

    return (
        <group {...props} dispose={null}>
            <animated.group
                position={[0, -0.3, 1]} rotation={[-0.4, 0.3, 0]} scale={scale} onClick={() => setActive(!active)} ref={myMesh}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube055.geometry}
                    material={materials.handelblack}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube055_1.geometry}
                    material={materials["Metal grey"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube055_2.geometry}
                    material={materials.Garbage}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube055_3.geometry}
                    material={materials["Screen black"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Cube055_4.geometry}
                    material={materials.Material}
                />
            </animated.group>
        </group >
    );
}

useGLTF.preload("/gangOpened.gltf");