/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import model from "../assets/Garbage export.gltf"

export default function Prototype1(props) {
  const { nodes, materials } = useGLTF(model);
  const myref = useRef();
  return (
    <group {...props} dispose={null}>
      <group ref={myref}
        position={[0, 0, 0]}
        rotation={[0, Math.PI / 2, 0]}
        scale={[1, 1, 0.9]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_1.geometry}
          material={materials.Garbage}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_2.geometry}
          material={materials["Screen black"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_3.geometry}
          material={materials["Garbage.Darker"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_4.geometry}
          material={materials.handelblack}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004_5.geometry}
          material={materials.Material}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/Garbage export.gltf");